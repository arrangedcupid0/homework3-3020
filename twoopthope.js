function tsp_ls(distance_matrix)
{
	//code that chooses a random route and sets it equal to incumbent
	var incumbent = [];
	for(var b = 0; b < distance_matrix.length; b++) //sets incumbent equal to a list from 0 to distance_matrix.length - 1
	{
		incumbent.push(b);
	}
	
	for(var a = 0; a < (incumbent.length / 2); a++)
	{
		var first = Math.floor(Math.random() * (incumbent.length - 1));
		var second = Math.floor(Math.random() * (incumbent.length - 1));
		while(first == second)
		{
			var second = Math.floor(Math.random() * incumbent.length);
		}
		var tmp = incumbent[first];
		incumbent[first] = incumbent[second];
		incumbent[second] = tmp;
	}

	var visited = [];
	visited.push(incumbent[0]);
	var keepGoin = true;
	var dist = getDist(distance_matrix, incumbent);
	while(keepGoin)
	{
		keepGoin = false;
		var i;
		var k;
		for(var j = 0; j < incumbent.length - 1; j++) //iterates through incumbent, except for the last element
		{
			var currentWeight = distance_matrix[incumbent[j]][incumbent[j + 1]];
			var length = distance_matrix[j].length;
			for(var l = 0; l < length; l++) //iterates through all of the nodes adjacent to the current node of incumbent
			{
				var beenThere = false;
				for(var m = 0; m < visited.length; m++)
				{
					if(incumbent[l] == visited[m])
					{
						beenThere = true;
					}
				}
				if(!beenThere)
				{
					var newWeight = distance_matrix[incumbent[j]][incumbent[l]];
					if(newWeight < currentWeight)
					{
						visited.push(incumbent[l]);
						i = j + 1;
						k = i
						for(var n = j + 1; n < incumbent.length; n++)
						{
							if(incumbent[l] == incumbent[n])
							{
								k = n;
							}
						}
						l = distance_matrix[j].length;
						j = incumbent.length;
						keepGoin = true;
						var newNew = swap(incumbent, i, k);
						var newDist = getDist(distance_matrix, newNew);
						if(newDist < dist)
						{
							incumbent = newNew;
							dist = newDist;
						}

					}
				}
			}
		}
	}
//console.log(incumbent);
	return dist;
}

function getDist(graph, route)
{
	var sum = 0;
	for(var i = 0; i < route.length - 1; i++)
	{
		sum = sum + graph[route[i]][route[i+1]];
	}
	return sum;
}
function swap(route, i, k)
{
	var finished = [];

	for(var count = 0; count < i; count++)
	{
		finished.push(route[count]);
	}
	var tmp = [];

	for(var count = k; count >= i; count--)
	{
		tmp.push(route[count]);
	}

	finished = finished.concat(tmp);

	for(var count = k + 1; count < route.length; count++)
	{
		finished.push(route[count]);
	}

	return finished;
}

function test()
{
	var graph = [[0, 2, 2],
			[2, 0, 1],
			[2, 1, 0]];
	console.log("final answer " + tsp_ls(graph)); 
	graph = [[0, 1, 2, 3, 4],
		[1, 0, 5, 2, 4],
		[2, 5, 0, 1, 2],
		[3, 2, 1, 0, 3],
		[4, 4, 2, 3, 0]];
	console.log("final answer " + tsp_ls(graph)); 
	graph = [[0, 1, 2, 3, 4, 5, 6],
		[1, 0, 7, 12, 5, 9, 21],
		[2, 7, 0, 14, 8, 3, 1],
		[3, 12, 14, 0, 17, 6, 12],
		[4, 5, 8, 17, 0, 13, 3],
		[5, 9, 3, 6, 13, 0, 7],
		[6, 21, 1, 12, 3, 7, 0]];
	
	console.log("final answer " + tsp_ls(graph)); 
	graph = [[ 0, 60, 16, 48, 49, 58, 51, 34, 60, 26, 64, 20 ],
		[ 60, 0, 23, 63, 13, 59, 16, 53, 40, 22, 47, 13 ],
		[ 16, 23, 0, 15, 42, 10, 48, 35, 52, 16, 47, 15 ],
		[ 48, 63, 15, 0, 14, 47, 12, 29, 15, 41, 17, 14 ],
		[ 49, 13, 42, 14, 0, 15, 42, 19, 30, 47, 27, 24 ],
		[ 58, 59, 10, 47, 15, 0, 15, 23, 11, 31, 35, 14 ],
		[ 51, 16, 48, 12, 42, 15, 0, 14, 21, 12, 15, 27 ],
		[ 34, 53, 35, 29, 19, 23, 14, 0, 11, 11, 11, 29 ],
		[ 60, 40, 52, 15, 30, 11, 21, 11, 0, 10, 27, 24 ],
		[ 26, 22, 16, 41, 47, 31, 12, 11, 10, 0, 13, 20 ],
		[ 64, 47, 47, 17, 27, 35, 15, 11, 27, 13, 0, 16 ],
		[ 20, 13, 15, 14, 24, 14, 27, 29, 24, 20, 16, 0 ]];
	console.log("final answer " + tsp_ls(graph)); 
	graph =[[ 0, 80, 62, 76, 77, 73, 85, 45, 33, 67, 91, 35, 76, 75, 28, 88, 84, 95 ],
		[ 80, 0, 94, 18, 36, 68, 51, 42, 73, 30, 72, 26, 27, 77, 55, 28, 55, 15 ],
		[ 62, 94, 0, 41, 20, 64, 65, 48, 35, 25, 55, 72, 35, 22, 86, 12, 55, 15 ],
		[ 76, 18, 41, 0, 79, 82, 46, 15, 34, 27, 70, 33, 67, 38, 22, 57, 60, 44 ],
		[ 77, 36, 20, 79, 0, 35, 47, 58, 52, 56, 44, 41, 61, 67, 62, 75, 37, 42 ],
		[ 73, 68, 64, 82, 35, 0, 21, 52, 15, 71, 43, 52, 68, 40, 38, 41, 70, 54 ],
		[ 85, 51, 65, 46, 47, 21, 0, 43, 50, 36, 62, 32, 66, 12, 55, 54, 55, 58 ],
		[ 45, 42, 48, 15, 58, 52, 43, 0, 10, 59, 42, 51, 15, 50, 31, 41, 32, 30 ],
		[ 33, 73, 35, 34, 52, 15, 50, 10, 0, 43, 16, 18, 24, 15, 32, 45, 25, 20 ],
		[ 67, 30, 25, 27, 56, 71, 36, 59, 43, 0, 15, 32, 13, 10, 15, 11, 52, 40 ],
		[ 91, 72, 55, 70, 44, 43, 62, 42, 16, 15, 0, 16, 14, 12, 40, 19, 21, 28 ],
		[ 35, 26, 72, 33, 41, 52, 32, 51, 18, 32, 16, 0, 17, 21, 29, 13, 43, 25 ],
		[ 76, 27, 35, 67, 61, 68, 66, 15, 24, 13, 14, 17, 0, 11, 30, 38, 22, 31 ],
		[ 75, 77, 22, 38, 67, 40, 12, 50, 15, 10, 12, 21, 11, 0, 22, 31, 18, 29 ],
		[ 28, 55, 86, 22, 62, 38, 55, 31, 32, 15, 40, 29, 30, 22, 0, 19, 27, 17 ],
		[ 88, 28, 12, 57, 75, 41, 54, 41, 45, 11, 19, 13, 38, 31, 19, 0, 22, 17 ],
		[ 84, 55, 55, 60, 37, 70, 55, 32, 25, 52, 21, 43, 22, 18, 27, 22, 0, 17 ],
		[ 95, 15, 15, 44, 42, 54, 58, 30, 20, 40, 28, 25, 31, 29, 17, 17, 17, 0 ]];
	console.log("final answer " + tsp_ls(graph)); 
	graph = [[ 0,
  10,
  50,
  93,
  83,
  113,
  126,
  114,
  81,
  74,
  73,
  115,
  115,
  117,
  121,
  55,
  106,
  52,
  47,
  96,
  34,
  17,
  29,
  107 ],
[ 10,
  0,
  78,
  26,
  119,
  82,
  85,
  100,
  20,
  44,
  69,
  106,
  94,
  88,
  122,
  79,
  40,
  18,
  99,
  51,
  89,
  48,
  54,
  74 ],
[ 50,
  78,
  0,
  26,
  69,
  12,
  119,
  21,
  39,
  79,
  80,
  68,
  103,
  68,
  57,
  19,
  50,
  28,
  113,
  13,
  86,
  39,
  25,
  29 ],
[ 93,
  26,
  26,
  0,
  55,
  107,
  64,
  108,
  92,
  90,
  114,
  99,
  19,
  41,
  36,
  96,
  79,
  24,
  105,
  59,
  21,
  15,
  77,
  81 ],
[ 83,
  119,
  69,
  55,
  0,
  95,
  83,
  85,
  27,
  90,
  104,
  15,
  43,
  78,
  11,
  60,
  104,
  61,
  29,
  60,
  66,
  48,
  78,
  19 ],
[ 113,
  82,
  12,
  107,
  95,
  0,
  31,
  12,
  103,
  91,
  43,
  102,
  83,
  38,
  57,
  90,
  73,
  101,
  26,
  57,
  99,
  75,
  59,
  76 ],
[ 126,
  85,
  119,
  64,
  83,
  31,
  0,
  24,
  91,
  27,
  23,
  13,
  70,
  74,
  96,
  54,
  95,
  60,
  90,
  39,
  67,
  65,
  16,
  57 ],
[ 114,
  100,
  21,
  108,
  85,
  12,
  24,
  0,
  39,
  65,
  80,
  55,
  63,
  47,
  93,
  29,
  72,
  70,
  40,
  50,
  84,
  38,
  32,
  55 ],
[ 81,
  20,
  39,
  92,
  27,
  103,
  91,
  39,
  0,
  10,
  69,
  38,
  48,
  82,
  14,
  41,
  67,
  88,
  59,
  67,
  79,
  52,
  51,
  34 ],
[ 74,
  44,
  79,
  90,
  90,
  91,
  27,
  65,
  10,
  0,
  12,
  46,
  46,
  47,
  25,
  64,
  37,
  69,
  60,
  24,
  76,
  12,
  40,
  61 ],
[ 73,
  69,
  80,
  114,
  104,
  43,
  23,
  80,
  69,
  12,
  0,
  37,
  65,
  49,
  56,
  18,
  66,
  28,
  39,
  73,
  65,
  23,
  79,
  46 ],
[ 115,
  106,
  68,
  99,
  15,
  102,
  13,
  55,
  38,
  46,
  37,
  0,
  57,
  36,
  34,
  42,
  60,
  15,
  54,
  42,
  40,
  26,
  28,
  21 ],
[ 115,
  94,
  103,
  19,
  43,
  83,
  70,
  63,
  48,
  46,
  65,
  57,
  0,
  64,
  41,
  36,
  27,
  10,
  60,
  61,
  32,
  64,
  24,
  21 ],
[ 117,
  88,
  68,
  41,
  78,
  38,
  74,
  47,
  82,
  47,
  49,
  36,
  64,
  0,
  10,
  37,
  23,
  47,
  45,
  34,
  54,
  51,
  32,
  14 ],
[ 121,
  122,
  57,
  36,
  11,
  57,
  96,
  93,
  14,
  25,
  56,
  34,
  41,
  10,
  0,
  50,
  59,
  22,
  32,
  13,
  44,
  24,
  29,
  45 ],
[ 55,
  79,
  19,
  96,
  60,
  90,
  54,
  29,
  41,
  64,
  18,
  42,
  36,
  37,
  50,
  0,
  49,
  41,
  30,
  21,
  35,
  37,
  32,
  33 ],
[ 106,
  40,
  50,
  79,
  104,
  73,
  95,
  72,
  67,
  37,
  66,
  60,
  27,
  23,
  59,
  49,
  0,
  46,
  44,
  34,
  19,
  42,
  30,
  26 ],
[ 52,
  18,
  28,
  24,
  61,
  101,
  60,
  70,
  88,
  69,
  28,
  15,
  10,
  47,
  22,
  41,
  46,
  0,
  29,
  23,
  25,
  28,
  20,
  37 ],
[ 47,
  99,
  113,
  105,
  29,
  26,
  90,
  40,
  59,
  60,
  39,
  54,
  60,
  45,
  32,
  30,
  44,
  29,
  0,
  30,
  27,
  37,
  37,
  19 ],
[ 96,
  51,
  13,
  59,
  60,
  57,
  39,
  50,
  67,
  24,
  73,
  42,
  61,
  34,
  13,
  21,
  34,
  23,
  30,
  0,
  14,
  20,
  23,
  33 ],
[ 34,
  89,
  86,
  21,
  66,
  99,
  67,
  84,
  79,
  76,
  65,
  40,
  32,
  54,
  44,
  35,
  19,
  25,
  27,
  14,
  0,
  24,
  25,
  13 ],
[ 17,
  48,
  39,
  15,
  48,
  75,
  65,
  38,
  52,
  12,
  23,
  26,
  64,
  51,
  24,
  37,
  42,
  28,
  37,
  20,
  24,
  0,
  12,
  20 ],
[ 29,
  54,
  25,
  77,
  78,
  59,
  16,
  32,
  51,
  40,
  79,
  28,
  24,
  32,
  29,
  32,
  30,
  20,
  37,
  23,
  25,
  12,
  0,
  11 ],
[ 107,
  74,
  29,
  81,
  19,
  76,
  57,
  55,
  34,
  61,
  46,
  21,
  21,
  14,
  45,
  33,
  26,
  37,
  19,
  33,
  13,
  20,
  11,
  0 ]];
	console.log("final answer " + tsp_ls(graph)); 
	graph = [[ 0,
  126,
  109,
  16,
  117,
  65,
  90,
  95,
  45,
  67,
  28,
  70,
  80,
  13,
  149,
  68,
  92,
  34,
  138,
  138,
  28,
  25,
  61,
  42,
  140,
  111,
  92,
  30,
  91,
  54 ],
[ 126,
  0,
  146,
  140,
  140,
  105,
  38,
  139,
  45,
  141,
  137,
  147,
  31,
  133,
  74,
  133,
  95,
  50,
  106,
  10,
  22,
  77,
  154,
  100,
  20,
  145,
  32,
  92,
  53,
  23 ],
[ 109,
  146,
  0,
  21,
  13,
  115,
  52,
  100,
  113,
  69,
  86,
  103,
  53,
  21,
  99,
  42,
  65,
  69,
  131,
  129,
  14,
  144,
  47,
  125,
  64,
  94,
  44,
  126,
  119,
  98 ],
[ 16,
  140,
  21,
  0,
  25,
  20,
  12,
  85,
  112,
  48,
  92,
  65,
  18,
  81,
  135,
  123,
  143,
  119,
  28,
  33,
  80,
  68,
  98,
  124,
  62,
  53,
  77,
  86,
  110,
  50 ],
[ 117,
  140,
  13,
  25,
  0,
  96,
  127,
  129,
  25,
  70,
  63,
  15,
  80,
  42,
  112,
  117,
  101,
  57,
  118,
  115,
  120,
  73,
  90,
  120,
  105,
  95,
  20,
  78,
  78,
  13 ],
[ 65,
  105,
  115,
  20,
  96,
  0,
  128,
  89,
  92,
  86,
  71,
  57,
  22,
  51,
  123,
  108,
  124,
  85,
  59,
  102,
  110,
  33,
  90,
  110,
  80,
  55,
  26,
  108,
  70,
  79 ],
[ 90,
  38,
  52,
  12,
  127,
  128,
  0,
  13,
  43,
  26,
  68,
  56,
  114,
  50,
  40,
  88,
  114,
  94,
  77,
  31,
  94,
  39,
  110,
  115,
  76,
  108,
  50,
  50,
  75,
  91 ],
[ 95,
  139,
  100,
  85,
  129,
  89,
  13,
  0,
  55,
  77,
  44,
  92,
  108,
  64,
  42,
  39,
  62,
  57,
  87,
  49,
  77,
  95,
  47,
  21,
  122,
  95,
  124,
  73,
  80,
  24 ],
[ 45,
  45,
  113,
  112,
  25,
  92,
  43,
  55,
  0,
  116,
  111,
  31,
  80,
  104,
  64,
  93,
  29,
  85,
  13,
  100,
  102,
  51,
  26,
  85,
  105,
  81,
  55,
  53,
  40,
  16 ],
[ 67,
  141,
  69,
  48,
  70,
  86,
  26,
  77,
  116,
  0,
  20,
  74,
  13,
  93,
  84,
  26,
  75,
  45,
  22,
  20,
  29,
  104,
  48,
  56,
  16,
  35,
  84,
  65,
  65,
  79 ],
[ 28,
  137,
  86,
  92,
  63,
  71,
  68,
  44,
  111,
  20,
  0,
  52,
  66,
  94,
  63,
  28,
  31,
  26,
  96,
  98,
  104,
  54,
  64,
  59,
  52,
  75,
  54,
  18,
  46,
  97 ],
[ 70,
  147,
  103,
  65,
  15,
  57,
  56,
  92,
  31,
  74,
  52,
  0,
  68,
  35,
  97,
  72,
  14,
  55,
  89,
  64,
  65,
  81,
  38,
  23,
  82,
  13,
  64,
  21,
  38,
  91 ],
[ 80,
  31,
  53,
  18,
  80,
  22,
  114,
  108,
  80,
  13,
  66,
  68,
  0,
  99,
  60,
  19,
  28,
  72,
  44,
  77,
  17,
  68,
  26,
  98,
  32,
  92,
  46,
  92,
  26,
  37 ],
[ 13,
  133,
  21,
  81,
  42,
  51,
  50,
  64,
  104,
  93,
  94,
  35,
  99,
  0,
  38,
  32,
  84,
  76,
  31,
  73,
  29,
  63,
  13,
  48,
  32,
  32,
  82,
  11,
  21,
  21 ],
[ 149,
  74,
  99,
  135,
  112,
  123,
  40,
  42,
  64,
  84,
  63,
  97,
  60,
  38,
  0,
  84,
  45,
  35,
  86,
  63,
  87,
  79,
  44,
  88,
  73,
  30,
  51,
  42,
  32,
  40 ],
[ 68,
  133,
  42,
  123,
  117,
  108,
  88,
  39,
  93,
  26,
  28,
  72,
  19,
  32,
  84,
  0,
  45,
  73,
  44,
  81,
  57,
  22,
  60,
  65,
  30,
  46,
  38,
  18,
  37,
  35 ],
[ 92,
  95,
  65,
  143,
  101,
  124,
  114,
  62,
  29,
  75,
  31,
  14,
  28,
  84,
  45,
  45,
  0,
  49,
  42,
  67,
  48,
  48,
  23,
  67,
  34,
  23,
  25,
  59,
  31,
  41 ],
[ 34,
  50,
  69,
  119,
  57,
  85,
  94,
  57,
  85,
  45,
  26,
  55,
  72,
  76,
  35,
  73,
  49,
  0,
  49,
  17,
  39,
  63,
  46,
  57,
  34,
  38,
  57,
  19,
  28,
  30 ],
[ 138,
  106,
  131,
  28,
  118,
  59,
  77,
  87,
  13,
  22,
  96,
  89,
  44,
  31,
  86,
  44,
  42,
  49,
  0,
  53,
  30,
  46,
  60,
  62,
  67,
  44,
  55,
  55,
  23,
  33 ],
[ 138,
  10,
  129,
  33,
  115,
  102,
  31,
  49,
  100,
  20,
  98,
  64,
  77,
  73,
  63,
  81,
  67,
  17,
  53,
  0,
  24,
  34,
  34,
  54,
  19,
  57,
  34,
  40,
  62,
  23 ],
[ 28,
  22,
  14,
  80,
  120,
  110,
  94,
  77,
  102,
  29,
  104,
  65,
  17,
  29,
  87,
  57,
  48,
  39,
  30,
  24,
  0,
  35,
  20,
  42,
  44,
  52,
  47,
  26,
  25,
  46 ],
[ 25,
  77,
  144,
  68,
  73,
  33,
  39,
  95,
  51,
  104,
  54,
  81,
  68,
  63,
  79,
  22,
  48,
  63,
  46,
  34,
  35,
  0,
  51,
  11,
  14,
  49,
  19,
  18,
  16,
  36 ],
[ 61,
  154,
  47,
  98,
  90,
  90,
  110,
  47,
  26,
  48,
  64,
  38,
  26,
  13,
  44,
  60,
  23,
  46,
  60,
  34,
  20,
  51,
  0,
  15,
  29,
  48,
  15,
  43,
  28,
  46 ],
[ 42,
  100,
  125,
  124,
  120,
  110,
  115,
  21,
  85,
  56,
  59,
  23,
  98,
  48,
  88,
  65,
  67,
  57,
  62,
  54,
  42,
  11,
  15,
  0,
  12,
  14,
  20,
  30,
  35,
  23 ],
[ 140,
  20,
  64,
  62,
  105,
  80,
  76,
  122,
  105,
  16,
  52,
  82,
  32,
  32,
  73,
  30,
  34,
  34,
  67,
  19,
  44,
  14,
  29,
  12,
  0,
  37,
  23,
  14,
  20,
  22 ],
[ 111,
  145,
  94,
  53,
  95,
  55,
  108,
  95,
  81,
  35,
  75,
  13,
  92,
  32,
  30,
  46,
  23,
  38,
  44,
  57,
  52,
  49,
  48,
  14,
  37,
  0,
  17,
  33,
  30,
  20 ],
[ 92,
  32,
  44,
  77,
  20,
  26,
  50,
  124,
  55,
  84,
  54,
  64,
  46,
  82,
  51,
  38,
  25,
  57,
  55,
  34,
  47,
  19,
  15,
  20,
  23,
  17,
  0,
  23,
  12,
  25 ],
[ 30,
  92,
  126,
  86,
  78,
  108,
  50,
  73,
  53,
  65,
  18,
  21,
  92,
  11,
  42,
  18,
  59,
  19,
  55,
  40,
  26,
  18,
  43,
  30,
  14,
  33,
  23,
  0,
  16,
  23 ],
[ 91,
  53,
  119,
  110,
  78,
  70,
  75,
  80,
  40,
  65,
  46,
  38,
  26,
  21,
  32,
  37,
  31,
  28,
  23,
  62,
  25,
  16,
  28,
  35,
  20,
  30,
  12,
  16,
  0,
  11 ],
[ 54,
  23,
  98,
  50,
  13,
  79,
  91,
  24,
  16,
  79,
  97,
  91,
  37,
  21,
  40,
  35,
  41,
  30,
  33,
  23,
  46,
  36,
  46,
  23,
  22,
  20,
  25,
  23,
  11,
  0 ]];
	console.log("final answer " + tsp_ls(graph)); 

}

test();

//console.log(swap([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], 3, 8));
//console.log(swap([2,1,0], 1, 2));
